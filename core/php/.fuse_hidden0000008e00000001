<?php

//$gds3710 = eqLogic::byId($this->getEqLogic_id());

//$ip = $gds3710->getConfiguration('ip');
//$remote_pin = $gds3710->getConfiguration('remote_pin');
//$password = $gds3710->getConfiguration('password');

$ip = '192.168.100.13';
$password = 'Fn5k87uu!!';
$remote_pin = 'GDS3710lDyTlHwNgZ';

$ch = curl_init();
$optArray = array(
    CURLOPT_URL => 'https://'.$ip.'/jpeg/stream?type=0&user=admin',
    CURLOPT_SSL_VERIFYPEER  => false,
    CURLOPT_SSL_VERIFYHOST => false,
    CURLOPT_RETURNTRANSFER => true
);
curl_setopt_array($ch, $optArray);
$auth_challenge = new SimpleXMLElement(curl_exec($ch));
curl_setopt_array($ch, $optArray);
$ChallengeCode = $auth_challenge->ChallengeCode[0];
$IDCode = $auth_challenge->IDCode[0];

$auth_response = md5($ChallengeCode.":".$remote_pin.":".$password);

set_time_limit(0);
@apache_setenv('no-gzip', 1);
@ini_set('zlib.output_compression', 0);

$opts = array(
	'http'=>array(
		'method'=>"GET",
		'header'=>"Accept-language: en\r\n" .
		"Cookie: foo=bar\r\n"
	  )
);
$context = stream_context_create($opts);

function datacb($ch, $data) {
	///echo 'test';
    echo $data;
    return strlen($data);
}

function Fetch($url, $file) {
	print_r($url);
	//echo 'test1';
    $ch = curl_init();
    //curl_setopt($ch, CURLOPT_USERPWD, $config['username'].":".$config['password']); 
    curl_setopt ($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_BUFFERSIZE, 8096);
    curl_setopt($ch, CURLOPT_BINARYTRANSFER, true);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
    curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_FILE, $file);
    //curl_setopt($ch, CURLOPT_WRITEFUNCTION, "datacb"); 
    curl_exec($ch);
    //print_r($f);
    //echo 'test2';
    //return $f;
}

$mjpeg_url = 'https://'.$ip.'/jpeg/stream?type=1&user=admin&authcode='.$auth_response.'&idcode='.$IDCode;

$fp;

Fetch($mjpeg_url, $fp);
///print_r($mjpeg_url);

//$fp = fopen($mjpeg_url, 'r', false, $context);

//print_r($fp);

if ($fp) {
	// send mjpeg header:
	//header("Connection: close");
	header("Cache-Control: no-cache");
	header("Cache-Control: private");
	header("Pragma: no-cache");
	header("Content-type: multipart/x-mixed-replace; boundary=boundarydonotcross");
	// pass data
	fpassthru($fp);
	fclose($fp);
} else {
	// error: webcam probably offline
	// send alternative picture:
	$d = file_get_contents("webcam_offline.jpg");
	Header("Content-Type: image/jpeg");
	Header("Content-Length: ".strlen($d));
	header("Cache-Control: no-cache");
	header("Cache-Control: private");
	header("Pragma: no-cache");
	echo $d;
}

/*$optArray = array(
    CURLOPT_URL => 'https://'.$ip.'/jpeg/stream?type=1&user=admin&authcode='.$auth_response.'&idcode='.$IDCode,
    CURLOPT_SSL_VERIFYPEER  => false,
    CURLOPT_SSL_VERIFYHOST => false,
    CURLOPT_RETURNTRANSFER => true
);

$ch = curl_init();
curl_setopt_array($ch, $optArray);
$data = curl_exec($ch);

print_r($data);*/

?>